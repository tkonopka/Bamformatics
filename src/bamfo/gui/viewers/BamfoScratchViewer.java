/*
 * Copyright 2013 Tomasz Konopka.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package bamfo.gui.viewers;

import java.io.File;
import java.io.OutputStream;
import jsequtils.file.OutputStreamMaker;

/**
 *
 * @author tomasz
 */
public class BamfoScratchViewer extends BamfoViewer {

    /**
     * Creates new form BamfoScratchViewer
     */
    public BamfoScratchViewer() {
        initComponents();
        canSaveAs=true;        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cardsToolbar = new javax.swing.JToolBar();
        jLabel1 = new javax.swing.JLabel();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        jScrollPane1 = new javax.swing.JScrollPane();
        scratchArea = new javax.swing.JTextArea();

        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.Y_AXIS));

        cardsToolbar.setBorder(null);
        cardsToolbar.setFloatable(false);
        cardsToolbar.setRollover(true);
        cardsToolbar.setFont(cardsToolbar.getFont());
        cardsToolbar.setMaximumSize(new java.awt.Dimension(32767, 30));
        cardsToolbar.setMinimumSize(new java.awt.Dimension(183, 30));
        cardsToolbar.setPreferredSize(new java.awt.Dimension(148, 30));

        jLabel1.setFont(new java.awt.Font("Ubuntu", 2, 15)); // NOI18N
        jLabel1.setText("  Space for temporary data");
        cardsToolbar.add(jLabel1);
        cardsToolbar.add(filler1);

        add(cardsToolbar);

        scratchArea.setColumns(20);
        scratchArea.setRows(1);
        scratchArea.setTabSize(2);
        jScrollPane1.setViewportView(scratchArea);

        add(jScrollPane1);
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToolBar cardsToolbar;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea scratchArea;
    // End of variables declaration//GEN-END:variables

    @Override
    public String getViewerDescriptor() {
        return "ScratchArea";
    }
    
    @Override
    public void saveAs(File savefile) {
        if (!overwrite(savefile)) {
            return;
        }
        try {
            OutputStream outstream = OutputStreamMaker.makeOutputStream(savefile);
            outstream.write(scratchArea.getText().getBytes());
            outstream.close();
        } catch (Exception ex) {            
            System.out.println("Error writing: "+ex.getMessage());
        }     
        this.savefile = savefile;
    }       
}
