/*
 * Copyright 2013 Tomasz Konopka.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package bamfo.gui.permissions;

/**
 *
 * This is not used in the GUI after all.
 * 
 * @author tomasz
 */
public class BamfoPermissionsDialog extends javax.swing.JDialog {

    boolean ok = false;

    public boolean isOk() {
        return ok;
    }

    /**
     * Creates new form BamfoPermissionsDialog
     */
    public BamfoPermissionsDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    public void setPermissions() {
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        permissionsTable = new javax.swing.JTable();
        permissionsCancelButton = new javax.swing.JButton();
        permissionsOkButton = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        permissionsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"User", null, null, null},
                {"Group", null, null, null},
                {"Other", null, null, null}
            },
            new String [] {
                "", "r", "w", "x"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        permissionsTable.setRowHeight(22);
        permissionsTable.setShowHorizontalLines(false);
        permissionsTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(permissionsTable);
        permissionsTable.getColumnModel().getColumn(0).setResizable(false);
        permissionsTable.getColumnModel().getColumn(0).setPreferredWidth(100);
        permissionsTable.getColumnModel().getColumn(1).setResizable(false);
        permissionsTable.getColumnModel().getColumn(1).setPreferredWidth(24);
        permissionsTable.getColumnModel().getColumn(2).setResizable(false);
        permissionsTable.getColumnModel().getColumn(2).setPreferredWidth(24);
        permissionsTable.getColumnModel().getColumn(3).setPreferredWidth(24);

        permissionsCancelButton.setText("Cancel");
        permissionsCancelButton.setMaximumSize(new java.awt.Dimension(80, 27));
        permissionsCancelButton.setMinimumSize(new java.awt.Dimension(80, 27));
        permissionsCancelButton.setPreferredSize(new java.awt.Dimension(80, 26));
        permissionsCancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                permissionsCancelButtonActionPerformed(evt);
            }
        });

        permissionsOkButton.setText("Ok");
        permissionsOkButton.setMaximumSize(new java.awt.Dimension(80, 27));
        permissionsOkButton.setMinimumSize(new java.awt.Dimension(80, 27));
        permissionsOkButton.setPreferredSize(new java.awt.Dimension(80, 26));
        permissionsOkButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                permissionsOkButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(permissionsOkButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(permissionsCancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(permissionsCancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(permissionsOkButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void permissionsCancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_permissionsCancelButtonActionPerformed
        // make sure the main form can query the OK action
        ok = false;

        // go back to the main form
        this.setVisible(false);
    }//GEN-LAST:event_permissionsCancelButtonActionPerformed

    private void permissionsOkButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_permissionsOkButtonActionPerformed

        // this is a hack. It asks the table to start editing a cell that doesn't
        // exist. This fails, but it forces the table to stop editing the
        // original cell.
        if (permissionsTable.isEditing()) {
            permissionsTable.editCellAt(-1, -1);
        }
        
        // make sure the main form can see the decision to execute the script
        ok = true;

        // go back to the main form
        this.setVisible(false);
    }//GEN-LAST:event_permissionsOkButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BamfoPermissionsDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BamfoPermissionsDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BamfoPermissionsDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BamfoPermissionsDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                BamfoPermissionsDialog dialog = new BamfoPermissionsDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton permissionsCancelButton;
    private javax.swing.JButton permissionsOkButton;
    private javax.swing.JTable permissionsTable;
    // End of variables declaration//GEN-END:variables
}
